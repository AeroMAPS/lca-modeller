project: example_methodology_ei391

ecoinvent:
    version: '3.9.1'
    model: 'cutoff'
    # Note: import of ecoinvent requires to provide credentials.
    # For privacy reasons, we ask you to create a file named .env, that you will not share /commit,
    # and contains the following :
        # ECOINVENT_LOGIN=<your_login>
        # ECOINVENT_PASSWORD=<your_password>

premise:
    scenarios:
        - model: "remind"
          pathway: "SSP2-Base"
          year: 2020
        #- model: "remind"
        #  pathway: "SSP2-Base"
        #  year: 2025
        #- model: "remind"
        #  pathway: "SSP2-Base"
        #  year: 2030
        #- model: "remind"
        #  pathway: "SSP2-Base"
        #  year: 2035
        #- model: "remind"
        #  pathway: "SSP2-Base"
        #  year: 2040
        #- model: "remind"
        #  pathway: "SSP2-Base"
        #  year: 2045
        - model: "remind"
          pathway: "SSP2-Base"
          year: 2050
    update: 'all'  # all sectors
        # Or a list of individual sectors to be updated
        # - 'electricity'
        # - 'biomass'
        # - 'dac'


model:
        
    fuel:
        unit: MJ     
        
        efuel:
            exchange: energy_consumption_electrofuel / 43.2  # conversion MJ to kg
            unit: kilogram
            
            production:
                custom_attributes:
                    - attribute: "phase"
                      value: "production electrofuel"
                      
                name: 'kerosene production, synthetic, Fischer Tropsch process, hydrogen from electrolysis, energy allocation' 
                loc: 'World'
                update:
                    - input_activity: 'market group for electricity*'  # Note that you can use '*' wildcard in exchange name to get all activities containing this str
                      new_value:
                          exchange: 0.015703571134020617
                          name: 'electricity production, photovoltaic, commercial'
                          loc: 'FR'
                          
                    - input_activity: 'syngas, RWGS, Production, for Fischer Tropsch process, hydrogen from electrolysis#World' # use '#' for specifying the location of exchange
                      new_value:
                          syngas_updated:
                              exchange: '*old_amount*'  # special symbol *old_amount* references the previous amount of this exchange
                              syngas_photovoltaic:
                                  name: 'syngas, RWGS, Production, for Fischer Tropsch process, hydrogen from electrolysis'
                                  loc: 'World'
                                  update:
                                      - input_activity: 'hydrogen production, gaseous, 30 bar, from PEM electrolysis, from grid electricity#World'
                                        new_value:
                                            hydrogen_updated:
                                                exchange: '*old_amount*'
                                                hydrogen_photovoltaic:
                                                    name: 'hydrogen production, gaseous, 30 bar, from PEM electrolysis, from grid electricity'
                                                    loc: 'World'
                                                    update:
                                                        - input_activity: 'market group for electricity*'
                                                          new_value:
                                                              exchange: 40.11
                                                              name: 'electricity production, photovoltaic, commercial'
                                                              loc: 'FR'
                                    # TODO: update carbon monoxide



methods:  # tip: you can search for methods with lca_algebraic function agb.findMethods()
    #- "('EF v3.1', 'acidification', 'accumulated exceedance (AE)')"
    #- "('EF v3.1', 'climate change', 'global warming potential (GWP100)')"
    #- "('EF v3.1', 'water use', 'user deprivation potential (deprivation-weighted water consumption)')"
    #- "('EF v3.1', 'land use', 'soil quality index')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'acidification: terrestrial', 'terrestrial acidification potential (TAP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'climate change',  'global warming potential (GWP100)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'ecotoxicity: freshwater', 'freshwater ecotoxicity potential (FETP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'ecotoxicity: marine', 'marine ecotoxicity potential (METP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'ecotoxicity: terrestrial', 'terrestrial ecotoxicity potential (TETP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'energy resources: non-renewable, fossil', 'fossil fuel potential (FFP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'eutrophication: freshwater', 'freshwater eutrophication potential (FEP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'eutrophication: marine', 'marine eutrophication potential (MEP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'human toxicity: carcinogenic', 'human toxicity potential (HTPc)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'human toxicity: non-carcinogenic', 'human toxicity potential (HTPnc)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'ionising radiation', 'ionising radiation potential (IRP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'land use', 'agricultural land occupation (LOP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'material resources: metals/minerals', 'surplus ore potential (SOP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'ozone depletion', 'ozone depletion potential (ODPinfinite)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'particulate matter formation', 'particulate matter formation potential (PMFP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'photochemical oxidant formation: human health', 'photochemical oxidant formation potential: humans (HOFP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'photochemical oxidant formation: terrestrial ecosystems', 'photochemical oxidant formation potential: ecosystems (EOFP)')"
    - "('ReCiPe 2016 v1.03, midpoint (H)', 'water use', 'water consumption potential (WCP)')"
    - "('ReCiPe 2016 v1.03, endpoint (H)', 'total: ecosystem quality', 'ecosystem quality')"
    - "('ReCiPe 2016 v1.03, endpoint (H)', 'total: human health', 'human health')"
    - "('ReCiPe 2016 v1.03, endpoint (H)', 'total: natural resources', 'natural resources')"

    
